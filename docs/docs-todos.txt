This  is a little note of some thoughts about the docs and how they ought to be designed better.


1. Sequelize has all these gotchas that annoyingly sneak up on you.
1. The docs surface advanced/edge case topics and bury simple explanations.
1.


Todos

1. Add https://sequelize.org/ information to homepage of docs
1. Rename API "core concepts"
  1. combine model-basics and model-instances
  1. combine querying-basics and query-finders
  1. integrate assoc.md docs into associations section
  1. Pull all sync gotchas into a sync article. e.g. Unique constraint in validations talks about how the model influences the sync call
1. Standardize index.js code
1. Surface emphasis on naming conventions and singular vs. plural convention, capitals etc.
1. Fix all internal links
1. Create redirects for files I destroyed put in "moved" folder

1. DONE Getting started similar to mongoose's (https://mongoosejs.com/docs/index.html)
1. DONE Express and Sequelize-CLI setup (sequelize-it quick start)
1. DONE Recommend using migrations. Treat sync as its own "Rapid Prototyping" pattern


# Sequelize-Auto

https://github.com/sequelize/sequelize-auto



index.js options:

'use strict';

// Create Connection
const Sequelize = require('sequelize');

const sequelize = new Sequelize({
  dialect: 'sqlite',
  store: ':memory'
});

// Initialize Models
const Post = require('./models/post.js')(sequelize, Sequelize);
const User = require('./models/user.js')(sequelize, Sequelize);
const Tag = require('./models/tag.js')(sequelize, Sequelize);
const Comment = require('./models/comment.js')(sequelize, Sequelize);

// Define Associations
Post.belongsTo(User, { as: 'author' });
Post.hasMany(Comment);
Post.belongsToMany(Tag, { through: 'postTags' });

User.hasMany(Post, { foreignKey: 'authorId' });
User.hasMany(Comment, { foreignKey: 'authorId' });

Tag.belongsToMany(Post, { through: 'postTags' });

Comment.belongsTo(User, { as: 'author' });
Comment.belongsTo(Post);
Comment.belongsTo(Comment, { as: 'parent' });
Comment.hasMany(Comment, { foreignKey: 'parentId', as: 'response' });

// Export connection and models
module.exports = {
  sequelize,
  Sequelize,
  Post,
  User,
  Tag,
  Comment
}
